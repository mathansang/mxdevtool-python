# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: mxdevtool package test

on:
  push:
    branches: [ "master", "test" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["windows-2022", "windows-2019", "ubuntu-22.04", "ubuntu-20.04", "macOS"]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10", "3.11"]
        exclude:
          - os: "ubuntu-22.04"
            python-version: "3.6"
          - os: "macOS"
            python-version: "3.6"
          - os: "macOS"
            python-version: "3.7"
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 numpy QuantLib
        python -m pip install --index-url https://test.pypi.org/simple mxdevtool -U
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics        
    # You can test your matrix by printing the current Python version
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"        
    - name: Display package version
      run: pip show mxdevtool
    - name: Test
      run: |
        python ./quantlib/test/QuantLibTestSuite.py || exit 1
        python run_test_usage.py || exit 1
        python run_test_random.py || exit 1
        python run_test_etc.py || exit 1
        python run_test_scenario.py || exit 1
